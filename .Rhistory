test_file <- my_import_ap_sales_fast()
glimpse(test_file)
usethis::use_r("my_import_ots")
files <- fs::dir_ls(
path = "C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Supply Chain Optimization Projects/Supply Chain Comprehensive Analysis/Data-Global OTS CSV by Month",glob = "*.csv")
devtools::load_all(".")
ots_files <- fs::dir_ls(
path = "C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Supply Chain Optimization Projects/Supply Chain Comprehensive Analysis/Data-Global OTS CSV by Month",glob = "*.csv")
devtools::load_all(".")
x <- files
my_import_ap_sales_fast <- function(x){
x <- files
vroom(x,delim = ",",col_names = TRUE,skip = 1,col_types = c(`Order No`="c")) %>%
janitor::clean_names() %>%
filter(marketing_region=="ASIA PACIFIC") %>%
filter(part_no!="ADJUSTMENT") %>%
rename(revenue=constant_usd_accrued_sum,
units=units_sold_sum,
revenue_country=revenue_account_country_description) %>%
filter(revenue>0) %>%
mutate(order_date=mdy(order_date),
shipped_date_requested=mdy(shipped_date_requested),
ship_date=mdy(ship_date),
revenue=as.numeric(str_remove_all(revenue,"\\,")),
units=as.numeric(str_remove_all(units,"\\,")))
}
devtools::test()
devtools::test()
devtools::load_all(".")
rm(list = c("files", "my_import_ap_sales_fast", "ots_files"))
devtools::load_all(".")
test_file <- my_import_ap_sales_fast()
glimpse(test_file)
devtools::load_all(".")
test_file <- my_import_ots()
devtools::load_all(".")
test_file <- my_import_ots()
ots_files
devtools::load_all(".")
test_file <- my_import_ots()
devtools::load_all(".")
test_file <- my_import_ots()
devtools::load_all(".")
test_file <- my_import_ots()
devtools::load_all(".")
test_file <- my_import_ots()
devtools::load_all(".")
test_file <- my_import_ots()
devtools::load_all(".")
test_file <- my_import_ots()
1:49
devtools::load_all(".")
devtools::load_all(".")
test_file <- my_import_ots()
ots_files <- fs::dir_ls(
path = "C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Supply Chain Optimization Projects/Supply Chain Comprehensive Analysis/Data-Global OTS CSV by Month",glob = "*.csv")
my_import_ots <- function(x){
x <- ots_files
selected_cols=1:49
vroom(x,col_names = TRUE,
delim = ",",
col_select = selected_cols,
col_types = c(
`Account Number`="c",
`Ordered Date`="c",
`Booked Date`="c",
`Request Date`="c",
`Original Ship Date`="c",
`Promised Date`="c",
`Schedule Ship Date`="c",
`Available To Whse Date`="c",
`Planned Departure Date`="c",
`Actual Shipment Date`="c",
`Ship Date`="c",
`Ship Month`="c"
)) %>%
filter(`Marketing Region`=="ASIA PACIFIC") %>%
filter(`SPI Organization Code` %in% c("AUS","CHS","CHC","CHW","CWW","SGC","JPN","SGW")) %>%
mutate(
`Ordered Date`=mdy(`Ordered Date`),
`Booked Date`=mdy(`Booked Date`),
`Request Date`=mdy(`Request Date`),
`Original Ship Date`=mdy(`Original Ship Date`),
`Promised Date`=mdy(`Promised Date`),
`Schedule Ship Date`=mdy(`Schedule Ship Date`),
`Available To Whse Date`=mdy(`Available To Whse Date`),
`Planned Departure Date`=mdy(`Planned Departure Date`),
`Actual Shipment Date`=mdy(`Actual Shipment Date`),
`Ship Date`=mdy(`Ship Date`),
`Ship Month`=mdy(`Ship Month`)
) %>%
mutate(Region=case_when(
`SPI Organization Code`=="AUS"~"AUSTRALIA",
`SPI Organization Code`=="JPN"~"JAPAN",
`SPI Organization Code`=='SGW'~"SINGAPORE",
TRUE~"CHINA"))
}
test_file <- my_import_ots()
devtools::load_all(".")
devtools::load_all(".")
rm(list = c("my_import_ots", "ots_files"))
devtools::load_all(".")
test_file <- my_import_ots()
files <- fs::dir_ls(
path = "C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Supply Chain Optimization Projects/Supply Chain Comprehensive Analysis/Data-Global Sales Orders Archived/Year to Date",glob = "*.csv")
files
my_import_ap_sales_fast <- function(x){
x <- files
vroom(x,delim = ",",col_names = TRUE,skip = 1,col_types = c(`Order No`="c")) %>%
janitor::clean_names() %>%
filter(marketing_region=="ASIA PACIFIC") %>%
filter(part_no!="ADJUSTMENT") %>%
rename(revenue=constant_usd_accrued_sum,
units=units_sold_sum,
revenue_country=revenue_account_country_description) %>%
filter(revenue>0) %>%
mutate(order_date=mdy(order_date),
shipped_date_requested=mdy(shipped_date_requested),
ship_date=mdy(ship_date),
revenue=as.numeric(str_remove_all(revenue,"\\,")),
units=as.numeric(str_remove_all(units,"\\,")))
}
test <- my_import_ap_sales_fast()
library(vroom)
library(tidyverse)
library(fs)
test <- my_import_ap_sales_fast()
library(lubridate)
test <- my_import_ap_sales_fast()
test
test <- pull(year_month) %>% unique() %>% sort()
test %>%  pull(year_month) %>% unique() %>% sort()
source('C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/R Package/my/R/my_import_transactional.R')
my_scale <- function(x){
(x-min(x,na.rm = TRUE)/(max(x,na.rm = TRUE)-min(x,na.rm = TRUE)))
}
sample_dt <- c(5,9,12,16)
my_scale(ssample_dt)
my_scale(sample_dt)
(x-min(x,na.rm = TRUE))/(max(x,na.rm = TRUE)-min(x,na.rm = TRUE))
my_scale <- function(x){
(x-min(x,na.rm = TRUE))/(max(x,na.rm = TRUE)-min(x,na.rm = TRUE))
}
my_scale(sample_dt)
fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Sales Ops/SPA Types Archive",
glob = "*.xslx") %>% max()
## import the latest spa type info
library(tidyverse)
library(readxl)
fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Sales Ops/SPA Types Archive",
glob = "*.xslx") %>% max()
fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Sales Ops/SPA Types Archive",
glob = "*.xslx")
fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Sales Ops/SPA Types Archive",
glob = "*.xlsx") %>% max()
x <- fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Sales Ops/SPA Types Archive",
glob = "*.xlsx") %>% max()
latest_spa_type <- read_xlsx(x,sheet = "SPA List",col_names = TRUE)
latest_spa_type
x <- fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Sales Ops/SPA Types Archive",
glob = "*.xlsx") %>% max()
latest_spa_type <- read_xlsx(x,sheet = "SPA List",col_names = TRUE) %>%
janitor::clean_names()
latest_spa_type
my_import_spa_type <- function(x){
x <- fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Sales Ops/SPA Types Archive",
glob = "*.xlsx") %>% max()
latest_spa_type <- read_xlsx(x,sheet = "SPA List",col_names = TRUE) %>%
janitor::clean_names()
return(latest_spa_type)
}
spa <- my_import_spa_type()
spa
library(tidyverse)
library(stringr)
library(lubridate)
library(readxl)
library(here)
library(fs)
files <- fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Channel Development/Vertical Markets Validation")
files
files[1]
df1 <- read_csv(files[1],col_names = TRUE)
df1
df1 <- read_csv(files[1],col_names = TRUE) %>%
janitor::clean_names()
df1
glimpse(df1)
df1 %>% filter(is.na(vertical_market_segment))
files
files <- fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Channel Development/Vertical Markets Validation")
files
df1 <- read_csv(files[2],col_names = TRUE) %>%
janitor::clean_names() %>%
mutate(adjust_vm =if_else(is.na(adjust_vm),vertical_market_segment,adjust_vm)) %>%
mutate(adjust_vm=str_to_upper(adjust_vm)) %>%
rename(validated_vertical_market=adjust_vm) %>%
distinct(spa_number,validated_vertical_market)
df1
df1 <- read_csv(files[2],col_names = TRUE) %>%
janitor::clean_names() %>%
mutate(adjust_vm =if_else(is.na(adjust_vm),vertical_market_segment,adjust_vm)) %>%
mutate(adjust_vm=str_to_upper(adjust_vm)) %>%
rename(validated_vertical_market=adjust_vm) %>%
distinct(spa_number,validated_vertical_market)
df1
read_xlsx(files[1],col_names = TRUE)
df2 <- read_xlsx(files[1],col_names = TRUE,skip = 2,sheet = "SPA Details with Sales")
df2
df2 <- read_xlsx(files[1],col_names = TRUE,skip = 2,sheet = "SPA Details with Sales") %>%
janitor::clean_names() %>%
rename(validated_vertical_market=sub_market) %>%
mutate(validated_vertical_market=str_to_upper(validated_vertical_market)) %>%
distinct(spa_number,validated_vertical_market)
df2
jpn <- read_xlsx(files[3],col_names = TRUE,sheet = "Raw Data") %>%
janitor::clean_names()
jpn
glimpse(jpn)
jpn <- read_xlsx(files[3],col_names = TRUE,sheet = "Raw Data") %>%
janitor::clean_names() %>%
rename(validated_vertical_market=vertical_market_sub_category) %>%
distinct(spa_number,validated_vertical_market)
jpn
aus
aus <- read_xlsx(files[1],col_names = TRUE,skip = 2,sheet = "SPA Details with Sales") %>%
janitor::clean_names() %>%
rename(validated_vertical_market=sub_market) %>%
mutate(validated_vertical_market=str_to_upper(validated_vertical_market)) %>%
distinct(spa_number,validated_vertical_market)
aus
aus %>% filter(is.na(validated_vertical_market))
chn <- read_csv(files[2],col_names = TRUE) %>%
janitor::clean_names() %>%
mutate(adjust_vm =if_else(is.na(adjust_vm),vertical_market_segment,adjust_vm)) %>%
mutate(adjust_vm=str_to_upper(adjust_vm)) %>%
rename(validated_vertical_market=adjust_vm) %>%
distinct(spa_number,validated_vertical_market)
chn %>% filter(is.na(validated_vertical_market))
jpn <- read_xlsx(files[3],col_names = TRUE,sheet = "Raw Data") %>%
janitor::clean_names() %>%
rename(validated_vertical_market=vertical_market_sub_category) %>%
distinct(spa_number,validated_vertical_market) %>%
filter(!is.na(validated_vertical_market))
jpn
t
my_consolidate_vms <- function(chn,aus,jpn){
files <- fs::dir_ls("C:/Users/chn-fzj/OneDrive - Panduit Corporation/Desktop/Sales Operations/Channel Development/Vertical Markets Validation")
chn <- read_csv(files[2],col_names = TRUE) %>%
janitor::clean_names() %>%
mutate(adjust_vm =if_else(is.na(adjust_vm),vertical_market_segment,adjust_vm)) %>%
mutate(adjust_vm=str_to_upper(adjust_vm)) %>%
rename(validated_vertical_market=adjust_vm) %>%
distinct(spa_number,validated_vertical_market)
aus <- read_xlsx(files[1],col_names = TRUE,skip = 2,sheet = "SPA Details with Sales") %>%
janitor::clean_names() %>%
rename(validated_vertical_market=sub_market) %>%
mutate(validated_vertical_market=str_to_upper(validated_vertical_market)) %>%
distinct(spa_number,validated_vertical_market)
jpn <- read_xlsx(files[3],col_names = TRUE,sheet = "Raw Data") %>%
janitor::clean_names() %>%
rename(validated_vertical_market=vertical_market_sub_category) %>%
distinct(spa_number,validated_vertical_market) %>%
filter(!is.na(validated_vertical_market))
spa_vertical_markets <- chn %>%
bind_rows(aus) %>%
bind_rows(jpn)
return(spa_vertical_markets)
}
my_consolidate_vms()
library(my)
library(hrbrthemes)
library(tidyverse)
library(hrbrthemes)
library(tidyverse)
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black")
)
}
mtcars
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
my_custom_theme()
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black")
plot.title = element_text(face="bold",size = 20,color="black"),
plot.subtitle.title = element_text(face="bold",size=18,color = "#dc2f02")
)
}
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
my_custom_theme()
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
labs(title = "Testing if Titles Work",
subtitle = "Testing if subtitle works")+
my_custom_theme()
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black")
plot.title = element_text(face="bold",size = 20,color="black"),
plot.subtitle= element_text(face="bold",size=18,color = "#dc2f02")
)
}
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black"),
plot.title = element_text(face="bold",size = 20,color="black"),
plot.subtitle.title = element_text(face="bold",size=18,color = "#dc2f02")
)
}
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
labs(title = "Testing if Titles Work",
subtitle = "Testing if subtitle works")+
my_custom_theme()
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black"),
plot.title = element_text(face="bold",size = 20,color="black"),
plot.subtitle = element_text(face="bold",size=18,color = "#dc2f02")
)
}
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
labs(title = "Testing if Titles Work",
subtitle = "Testing if subtitle works")+
my_custom_theme()
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black"),
plot.title = element_text(face="bold",size = 20,color="black"),
plot.subtitle = element_text(face="bold",size=16,color = "#dc2f02"),
plot.title.position = "panel"
)
}
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
labs(title = "Testing if Titles Work",
subtitle = "Testing if subtitle works")+
my_custom_theme()
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black"),
plot.title = element_text(face="bold",size = 20,color="black")
)
}
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
labs(title = "Testing if Titles Work",
subtitle = "Testing if subtitle works")+
my_custom_theme()
my_custom_theme <- function(){
theme_ipsum_rc() %+replace%
theme(
axis.title.x = element_text(face="bold",size = 15.8,color="black"),
axis.title.y = element_text(face="bold",size = 15.8,color = "black"),
axis.text.x = element_text(face="bold",size = 11,color = "black"),
axis.text.y = element_text(face="bold",size = 11,color = "black")
)
}
mtcars %>%
ggplot(aes(x=drat,y=mpg))+
geom_point()+
labs(title = "Testing if Titles Work",
subtitle = "Testing if subtitle works")+
my_custom_theme()
library(tidyverse)
my_plot_numerics <- function(df){
df <- df %>%
select_if(is.numeric)
last_col <- ncol(df)
plot <- df %>%
pivot_longer(1:last_col,names_to="variable_name",values_to = "value") %>%
ggplot(aes(x=value,fill=variable_name))+
geom_density(alpha=0.5)+
facet_wrap(~variable_name,ncol = 4,scales = "free")+
my::my_custom_theme()
}
my_plot_numerics(mtcars)
library(hrbrthemes)
library(my)
my_plot_numerics(mtcars)
my_plot_numerics <- function(df){
df <- df %>%
select_if(is.numeric)
last_col <- ncol(df)
plot <- df %>%
pivot_longer(1:last_col,names_to="variable_name",values_to = "value") %>%
ggplot(aes(x=value,fill=variable_name))+
geom_density(alpha=0.5)+
facet_wrap(~variable_name,ncol = 4,scales = "free")+
my::my_custom_theme()
return(plot)
}
my_plot_numerics(mtcars)
library(tidyverse)
library(hrbrthemes)
library(my)
my_plot_numerics <- function(df){
df <- df %>%
select_if(is.numeric)
last_col <- ncol(df)
plot <- df %>%
pivot_longer(1:last_col,names_to="variable_name",values_to = "value") %>%
ggplot(aes(x=value,fill=variable_name))+
geom_density(alpha=0.5)+
facet_wrap(~variable_name,ncol = 4,scales = "free",show.legend=FALSE)+
my_custom_theme()
return(plot)
}
my_plot_numerics(mtcars)
plot <- df %>%
pivot_longer(1:last_col,names_to="variable_name",values_to = "value") %>%
ggplot(aes(x=value,fill=variable_name))+
geom_density(alpha=0.5,show.legend=FALSE)+
facet_wrap(~variable_name,ncol = 4,scales = "free")+
my_custom_theme()
my_plot_numerics <- function(df){
df <- df %>%
select_if(is.numeric)
last_col <- ncol(df)
plot <- df %>%
pivot_longer(1:last_col,names_to="variable_name",values_to = "value") %>%
ggplot(aes(x=value,fill=variable_name))+
geom_density(alpha=0.5,show.legend=FALSE)+
facet_wrap(~variable_name,ncol = 4,scales = "free")+
my_custom_theme()
return(plot)
}
my_plot_numerics(mtcars)
my_plot_numerics <- function(df){
df <- df %>%
select_if(is.numeric)
last_col <- ncol(df)
plot <- df %>%
pivot_longer(1:last_col,names_to="variable_name",values_to = "value") %>%
ggplot(aes(x=value,fill=variable_name))+
geom_density(alpha=0.5,show.legend=FALSE)+
facet_wrap(~variable_name,ncol = 4,scales = "free")+
labs(
title="Density Plots for All Numeric Variables"
)
my_custom_theme()
return(plot)
}
my_plot_numerics(mtcars)
my_plot_numerics <- function(df){
df <- df %>%
select_if(is.numeric)
last_col <- ncol(df)
plot <- df %>%
pivot_longer(1:last_col,names_to="variable_name",values_to = "value") %>%
ggplot(aes(x=value,fill=variable_name))+
geom_density(alpha=0.5,show.legend=FALSE)+
facet_wrap(~variable_name,ncol = 4,scales = "free")+
labs(
title="Density Plots for All Numeric Variables"
)+
my_custom_theme()
return(plot)
}
my_plot_numerics(mtcars)
mtcars %>% glimpse()
iris3 %>% glimpse()
iris %>% glimpse()
data("Titanic")
Titanic
Titanic %>% glimpse()
library(DataExplorer)
datasets::cars
datasets::faithful
datasets::faithful %>% DataExplorer::plot_bar()
datasets::faithful %>% DataExplorer::introduce()
library(my)
